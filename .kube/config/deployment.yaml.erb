---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: <%= namespace %>
    krane-prune: "true"
  name: web
  namespace: <%= namespace %>
spec:
  replicas: <%= replica_count %>
  selector:
    matchLabels:
      app: <%= namespace %>
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 1
    type: RollingUpdate
  revisionHistoryLimit: 10
  minReadySeconds: 60
  template:
    metadata:
      annotations:
      labels:
        app: <%= namespace %>
        sha: "<%= current_sha %>"
        type: web
      name: web
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: type
                operator: In
                values:
                - web
            topologyKey: "kubernetes.io/hostname"
      nodeSelector:
        size: "<%= web_size %>"
        preemptible: "<%= web_preemptible %>"
        type: "<%= web_type %>"
      containers:
      - name: app
        image: "gcr.io/alist-corporate-it/adp:latest"
        imagePullPolicy: Always
        env:
        - name: DEPLOYMENT_ID
          value: <%= deployment_id %>
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: DD_AL_STATSD_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name : DD_VERSION
          value: <%= namespace %>-<%= current_sha %>
        envFrom:
        - configMapRef:
            name: app-env
        - secretRef:
            name: app-secrets
            optional: false
        ports:
        - containerPort: 9292
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /status
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            memory: <%= mem_limit %>
            cpu: <%= cpu_limit %>
          requests:
            memory: <%= mem_limit %>
            cpu: <%= cpu_limit %>
        volumeMounts:
        - mountPath: /usr/src/app/service-account-key.json
          name: google-oauth
          readOnly: true
          subPath: service-account-key.json
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
      - name: google-oauth
        secret:
          defaultMode: 420
          secretName: google-oauth
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
